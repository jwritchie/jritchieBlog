@model jritchieBlog.Models.Post
@{
    ViewBag.Title = "Create";
}
<h2>Create new Post</h2>

@using (Html.BeginForm("Create", "Posts", FormMethod.Post, new { enctype = "Multipart/form-data" }))
{
    @Html.AntiForgeryToken()    <!-- Hidden value, auto-generated token used to validate data returned is coming from the user. -->

    <div class="form-horizontal">

        <hr class="blue" />

        <!-- Requires field's data be valid -->
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @*<div class="form-group">
                @Html.LabelFor(model => model.Created, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Created, new { htmlAttributes = new { @class = "form-control" } })
                     Displays validation message
                    @Html.ValidationMessageFor(model => model.Created, "", new { @class = "text-danger" })
                </div>
            </div>*@
        @*<div class="form-group">
                @Html.LabelFor(model => model.Updated, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Updated, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Updated, "", new { @class = "text-danger" })
                </div>
            </div>*@
        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>
        @*<div class="form-group">
                @Html.LabelFor(model => model.Body, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Body, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Body, "", new { @class = "text-danger" })
                </div>
            </div>*@
        <div class="form-group">
            @Html.LabelFor(model => model.Body, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                <textarea id="editor" class="form-control" name="Body" rows="5"></textarea>
                @Html.ValidationMessageFor(model => model.Body, "", new { @class = "text-danger" })
            </div>
        </div>
        @*<div class="form-group">
                @Html.LabelFor(model => model.MediaUrl, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.MediaUrl, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MediaUrl, "", new { @class = "text-danger" })
                </div>
            </div>*@
        <div class="form-group">
            <label class="control-label col-md-2">Upload Image</label>
            <div class="col-md-8">
                <input name="image" type="file" class="form-control" />
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Publish?</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Published, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Published, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <!-- Input/Button to submit the data. -->
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </div>
    </div>
}
<div>
    @Html.ActionLink("Back to Posts", "Index", null, new { style = "color:rgb(30,80,150); text-decoration:underline" })
</div>

<!-- Runs scripts for this page (this specific Section) -->
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/tinymce/tinymce.min.js"></script>
    <script src="~/Scripts/tinymce/jquery.tinymce.min.js"></script>
    <script type="text/javascript">

        $(function () {
            tinymce.init({
                selector: '#editor'
            });
        });
    </script>
}