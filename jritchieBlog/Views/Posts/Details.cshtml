@model jritchieBlog.Models.Post

@{
    ViewBag.Title = "Details";
}

<div class="col-lg-8 col-md-8 col-sm-8">

    <div style="margin-top:40px; margin-bottom:80px">

        <div style="border:4px double #009999; margin-bottom:10px; padding:10px; box-shadow:2px 2px 3px rgba(30,30,30,0.25)">

            @{
                if (!Model.Published)
                {
                    <p style="color:red; margin-bottom:0px">Unpublished</p>
                }
            }

            <!-- Title -->
            <p style="font-size:large; font-weight:700; color: #009999; background-color: transparent; text-decoration: none;">@Model.Title</p>

            <!-- Date(s) -->
            <p style="margin-top:-21px; margin-bottom:0px !important; font-size:smaller"><span style="font-weight:bold">Posted: &nbsp;&nbsp;&nbsp;</span>@Model.Created</p>
            @{
                if (Model.Updated != null)
                {
                    <p style="margin-top:0px; font-size:smaller"><span style="font-weight:bold">Updated: </span>@Html.DisplayFor(model => model.Created)</p>
                }
                else
                {
                    <p style="margin-top:0px; font-size:smaller"><span style="font-weight:bold">Updated: </span></p>
                }
            }

            <!-- Picture -->
            <img class="img-responsive" src="@Url.Content(Model.MediaUrl)" style="display:block; margin:auto; max-height:250px; width:auto; box-shadow:2px 2px 3px rgba(30,30,30,0.25)" />

            <hr class="blue-small" />

            <!-- Body -->
            @Html.Raw(Model.Body)

            <hr class="blue" />

            <!-- Comments -->
            @if (Model.Comments.Count != 0)
            {
                if (Model.Comments.Count == 1)
                {
                    <p style="color:#009999">@Model.Comments.Count comment.</p>
                }
                else
                {
                    <p style="color:#009999">@Model.Comments.Count comments.</p>
                }
            }
            else
            {
                <p style="color:#009999">No Comments.</p>
            }

            @{
                // Alternate background-color of Comments display.
                bool commentFieldBlue = true;
                foreach (var comment in Model.Comments.OrderByDescending(c => c.Id))
                {
                    if (commentFieldBlue)   // Comment with Blue background.
                    {
                        <div style="padding:6px; background-color:rgba(30, 80, 150, 0.05); box-shadow:2px 2px 3px rgba(30,30,30,0.25)">
                            <p style="font-size:smaller"><span style="font-weight:bold">Posted: </span>@comment.Created: &nbsp;<span style="font-weight:bold">@comment.Author.FullName</span> said:</p>
                            <p>@comment.Body</p>

                            @{  // Display Comment-Update information if available. 
                                if (comment.Updated != null)
                                {
                                    <div style="border:1px solid #009999; margin: 0px 10px 6px 10px; padding: 10px 10px 0px 10px">
                                        <p style="font-size:smaller"><span style="font-weight:bold">Edited: </span>@comment.Updated</p>
                                        <p style="font-size:smaller; margin-top:-18px"><span style="font-weight:bold">Reason: </span>@comment.UpdateReason</p>
                                    </div>
                                }
                            }

                            @{  // Allow Admin, Moderator(s), and original Commenter to Edit/Delete Comments.
                                if (User.IsInRole("Admin") || User.IsInRole("Moderator") || ViewBag.UserId == comment.Author)
                                {
                                    <div style="text-align:center">
                                        @Html.ActionLink("Edit Comment", "Edit", "Comments", new { id = comment.Id }, new { style = "color:rgb(30,80,150)" }) |
                                        @Html.ActionLink("Delete Comment", "Delete", "Comments", new { id = comment.Id }, new { style = "color:rgb(30,80,150)" })
                                    </div>
                                }
                            }
                        </div>
                        commentFieldBlue = false;
                    }
                    else                    // Comment with Green background.
                    {
                        <div style="padding:6px; background-color:rgba(0, 153, 153, 0.05); box-shadow:2px 2px 3px rgba(30,30,30,0.25)">
                            <p style="font-size:smaller"><span style="font-weight:bold">Posted: </span>@comment.Created: &nbsp;<span style="font-weight:bold">@comment.Author.FullName</span> said:</p>
                            <p>@comment.Body</p>

                            @{  // Display Comment-Update information if available.
                                if (comment.Updated != null && comment.UpdateReason != null)
                                {
                                    <div style="border:1px solid #009999; margin: 0px 10px 6px 10px; padding: 10px 10px 0px 10px">
                                        <p style="font-size:smaller"><span style="font-weight:bold">Edited: </span>@comment.Updated</p>
                                        <p style="font-size:smaller; margin-top:-18px"><span style="font-weight:bold">Reason: </span>@comment.UpdateReason</p>
                                    </div>
                                }
                            }

                            @{  // Allow Admin, Moderator(s), and original Commenter to Edit/Delete Comments.                              
                                if (User.IsInRole("Admin") || User.IsInRole("Moderator") || ViewBag.UserId == comment.Author)
                                {
                                    <div style="text-align:center">
                                        @Html.ActionLink("Edit Comment", "Edit", "Comments", new { id = comment.Id }, new { style = "color:rgb(30,80,150)" }) |
                                        @Html.ActionLink("Delete Comment", "Delete", "Comments", new { id = comment.Id }, new { style = "color:rgb(30,80,150)" })
                                    </div>
                                }
                            }
                        </div>
                        commentFieldBlue = true;
                    }
                    <hr class="blue-small" />
                }
            }


            @{if (Request.IsAuthenticated)    // Confirm user is logged in before allowing Comment creation.
                {
                    using (Html.BeginForm("Create", "Comments", new { PostId = Model.Id, postToReturnTo = Model.Slug }, FormMethod.Post, null))
                    {
                        @Html.AntiForgeryToken()
                        <div>
                            <textarea rows="5" name="Body" style="max-width:none !important; width:100%">@ViewBag.Comment</textarea>
                            @*<input name="Body" type="text" placeholder="Leave a Comment" value="@ViewBag.Comment" />*@
                            <button class="btn btn-primary center-block" type="submit">Submit Comment</button>
                        </div>
                    }
                }
            }

            @{  // Determine who can Edit/Delete the post.
                if (User.IsInRole("Admin"))
                {
                    <p style="text-align:center; padding:20px 0px 10px 0px">
                        @Html.ActionLink("Edit Post", "Edit", new { id = Model.Id }, new { style = "color:rgb(30,80,150); text-decoration:underline" })
                        <span>|</span>
                        @Html.ActionLink("Delete Post", "Delete", new { id = Model.Id }, new { style = "color:rgb(30,80,150); text-decoration:underline" })
                        <span>|</span>
                        @Html.ActionLink("Back to Posts", "Index", null, new { style = "color:rgb(30,80,150); text-decoration:underline" })
                    </p>
                }
                else
                {
                    <p style="text-align:center; padding:20px 0px 10px 0px">
                        @Html.ActionLink("Back to Posts", "Index", null, new { style = "color:rgb(30,80,150); text-decoration:underline" })
                    </p>
                }
            }
        </div>
    </div>

</div>

    @*<p>
            @Html.ActionLink("Edit", "Edit", new { id = Model.Id }) |
            @Html.ActionLink("Back to List", "Index")
        </p>*@
